generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  CreatedAt DateTime @default(now())
  UpdateAt  DateTime @default(now())
  role      String   @default("user")
  name          String?
image         String?
emailVerified DateTime?
Account Account[]
  Session Session[]

}

model Product {
  id                  String           @id @default(uuid())
  categoryId          String
  name                String
  dicountPrice        Decimal          @default(0)
  description         String
  price               Decimal
  stock               Decimal
  isFeatured          Boolean          @default(false)
  isArchived          Boolean          @default(false)
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  template            String           @default("")
  useTemplate         Boolean          @default(false)
  mouseId             String?
  soldnumber          Decimal          @default(0)
  comingSoon          Boolean          @default(false)
  outOfStock          Boolean          @default(false)
  additionalDetails   Field[]
  images              Image[]
  orderItems          OrderItem[]
  PreBuiltPcmodel     PreBuiltPcmodel?
  category            Category         @relation("CategoryToProduct", fields: [categoryId], references: [id])
  FullPackOrderScreen FullPack[]       @relation("FullPackOrderScreen")
  FullPackOrderUnity  FullPack[]       @relation("FullPackOrderUnity")
  FullPack            FullPack[]       @relation("FullPackProduct")
  OrderPackCamera     PackOrder[]      @relation("OrderPackCamera")
  OrderPackChair      PackOrder[]      @relation("OrderPackChair")
  OrderPackClavier    PackOrder[]      @relation("OrderPackClavier")
  OrderPackHeadset    PackOrder[]      @relation("OrderPackHeadset")
  OrderPackManette    PackOrder[]      @relation("OrderPackManette")
  OrderPackMic        PackOrder[]      @relation("OrderPackMic")
  OrderPackMouse      PackOrder[]      @relation("OrderPackMouse")
  OrderPackMousePad   PackOrder[]      @relation("OrderPackMousePad")
  OrderPackScreen     PackOrder[]      @relation("OrderPackScreen")
  OrderPackSpeaker    PackOrder[]      @relation("OrderPackSpeaker")
  PackCamera          AccessoryPack[]  @relation("PackCamera")
  PackChair           AccessoryPack[]  @relation("PackChair")
  PackClavier         AccessoryPack[]  @relation("PackClavier")
  PackHeadset         AccessoryPack[]  @relation("PackHeadset")
  PackManette         AccessoryPack[]  @relation("PackManette")
  PackMic             AccessoryPack[]  @relation("PackMic")
  PackMouse           AccessoryPack[]  @relation("PackMouse")
  PackMousePad        AccessoryPack[]  @relation("PackMousePad")
  PackProduct         AccessoryPack[]  @relation("PackProduct")
  PackScreen          AccessoryPack[]  @relation("PackScreen")
  PackSpeaker         AccessoryPack[]  @relation("PackSpeaker")
  cpus                Processor[]      @relation("ProductToCPU")
  Camera              Camera[]         @relation("ProductToCamera")
  Chaisegaming        Chaisegaming[]   @relation("ProductToChaisegaming")
  cooling             Cooling[]        @relation("ProductToCooling")
  gpus                Gpu[]            @relation("ProductToGPU")
  Hautparleur         Hautparleur[]    @relation("ProductToHautparleur")
  Headset             Headset[]        @relation("ProductToHeadset")
  Laptop              Laptop[]         @relation("ProductToLaptop")
  Manette             Manette[]        @relation("ProductToManette")
  memories            Memory[]         @relation("ProductToMemory")
  Mic                 Mic[]            @relation("ProductToMic")
  motherboard         Motherboard[]    @relation("ProductToMotherboard")
  Mouse               Mouse[]          @relation("ProductToMouse")
  Mousepad            Mousepad[]       @relation("ProductToMousepad")
  cases               PCcase[]         @relation("ProductToPCCase")
  powersupplies       Powersupply[]    @relation("ProductToPowersupply")
  screens             Screen[]         @relation("ProductToScreen")
  storages            Harddisk[]       @relation("ProductToStorage")
  keyboard            keyboard[]       @relation("ProductTokeyboard")
  Pack                Pack[]           @relation("ProductsToPack")
}

model Field {
  id        String  @id @default(uuid())
  productId String
  name      String
  value     String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}

model Category {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  navLab    NavLab    @default(COMPONENTS)
  products  Product[] @relation("CategoryToProduct")
}

model Order {
  id          String      @id @default(uuid())
  isPaid      Boolean     @default(false)
  phone       String      @default("")
  address     String      @default("")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  email       String      @default("")
  lastName    String      @default("")
  name        String      @default("")
  pcOrderId   String      @default("")
  phoneNumber String      @default("")
  archivee    Boolean     @default(false)
  orderItems  OrderItem[]
  PackOrders  PackOrder[]
  orderPc     pcOrder[]   @relation("OrderTopcOrder")
}

model pcOrder {
  id              String      @id @default(uuid())
  price           String      @default("")
  casorderItemId  String      @default("")
  cooorderItemId  String      @default("")
  disorderItemId  String      @default("")
  gpuorderItemId  String      @default("")
  motorderItemId  String      @default("")
  poworderItemId  String      @default("")
  proorderItemId  String      @default("")
  ramorderItemId  String[]    @default([])
  scrorderItemId  String      @default("")
  dis2orderItemId String      @default("")
  Title           String      @default("")
  reduction       Decimal     @default(0)
  orders          Order[]     @relation("OrderTopcOrder")
  case            OrderItem[] @relation("case_pcOrder")
  cooling         OrderItem[] @relation("cooling_pcOrder")
  disk            OrderItem[] @relation("disk_pcOrder")
  gpu             OrderItem[] @relation("gpu_pcOrder")
  motherboard     OrderItem[] @relation("motherboard_pcOrder")
  power           OrderItem[] @relation("power_pcOrder")
  processor       OrderItem[] @relation("processor_pcOrder")
  ram             OrderItem[] @relation("ram_pcOrder")
  screen          OrderItem[] @relation("screen_pcOrder")
}

model OrderItem {
  id          String    @id @default(uuid())
  orderId     String
  productId   String
  pcOrderId   String?
  number      String    @default("1")
  Title       String    @default("")
  order       Order     @relation(fields: [orderId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
  case        pcOrder[] @relation("case_pcOrder")
  cooling     pcOrder[] @relation("cooling_pcOrder")
  disk        pcOrder[] @relation("disk_pcOrder")
  gpu         pcOrder[] @relation("gpu_pcOrder")
  motherboard pcOrder[] @relation("motherboard_pcOrder")
  power       pcOrder[] @relation("power_pcOrder")
  processor   pcOrder[] @relation("processor_pcOrder")
  ram         pcOrder[] @relation("ram_pcOrder")
  screen      pcOrder[] @relation("screen_pcOrder")

  @@index([orderId])
  @@index([productId])
}

model Image {
  id        String   @id @default(uuid())
  productId String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}

model Screen {
  id            String      @id @default(uuid())
  curved        Boolean
  resolutionId  String
  RefreshRateId String
  PouceId       String
  MarkId        String
  Mark          Mark        @relation(fields: [MarkId], references: [id])
  Pouce         Pouce       @relation(fields: [PouceId], references: [id])
  RefreshRate   RefreshRate @relation(fields: [RefreshRateId], references: [id])
  resolution    Resolution  @relation(fields: [resolutionId], references: [id])
  products      Product[]   @relation("ProductToScreen")
}

model Mark {
  id      String   @id @default(uuid())
  name    String
  screens Screen[]
}

model Pouce {
  id      String   @id @default(uuid())
  name    String
  screens Screen[]
}

model Resolution {
  id      String   @id @default(uuid())
  name    String
  screens Screen[]
}

model RefreshRate {
  id      String   @id @default(uuid())
  name    String
  screens Screen[]
}

model Motherboard {
  id             String             @id @default(uuid())
  manufacturerId String
  ramslotsId     String
  chipsetId      String
  cpusupportId   String
  formatId       String
  chipset        MotherboardChipset @relation(fields: [chipsetId], references: [id])
  cpusupport     CPUSupport         @relation(fields: [cpusupportId], references: [id])
  format         MotherboardFormat  @relation(fields: [formatId], references: [id])
  manufacturer   Manufacturer       @relation("ManufacturerToMotherboard", fields: [manufacturerId], references: [id])
  ramslots       RamSlots           @relation(fields: [ramslotsId], references: [id])
  products       Product[]          @relation("ProductToMotherboard")
}

model RamSlots {
  id           String        @id @default(uuid())
  name         String
  number       Int
  type         String
  motherboards Motherboard[]
}

model MotherboardChipset {
  id           String        @id @default(uuid())
  name         String
  motherboards Motherboard[]
}

model CPUSupport {
  id           String        @id @default(uuid())
  name         String

  cooling      Cooling[]
  motherboards Motherboard[]
  processor    Processor[]

}

model Guarantee {
  id   String @id @default(uuid())
  name String
}

model MotherboardFormat {
  id           String        @id @default(uuid())
  name         String
  motherboards Motherboard[]
}

model Manufacturer {
  id           String         @id @default(uuid())
  name         String
  imageUrl     String
  Camera       Camera[]
  Chaisegaming Chaisegaming[]
  Hautparleur  Hautparleur[]
  Headset      Headset[]
  Laptops      Laptop[]
  Manette      Manette[]
  Mic          Mic[]
  motherboards Motherboard[]  @relation("ManufacturerToMotherboard")
  Mouse        Mouse[]
  Mousepad     Mousepad[]
  Pack         Pack[]
  keyboard     keyboard[]
}

model Processor {
  id               String         @id @default(uuid())
  processorModelId String
  cpusupportId     String
  TDP              Int            @default(0)
  cpusupport       CPUSupport     @relation(fields: [cpusupportId], references: [id])
  processorModel   ProcessorModel @relation(fields: [processorModelId], references: [id])
  products         Product[]      @relation("ProductToCPU")
}

model ProcessorModel {
  id        String      @id @default(uuid())
  name      String
  processor Processor[]

}

model Memory {
  id          String          @id @default(uuid())
  rgb         Boolean
  marqueId    String
  numberId    String
  typeId      String
  frequencyId String
  TDP         Int             @default(0)
  frequency   MemoryFrequency @relation(fields: [frequencyId], references: [id])
  marque      MemoryMarque    @relation(fields: [marqueId], references: [id])
  number      MemoryNumber    @relation(fields: [numberId], references: [id])
  type        MemoryType      @relation(fields: [typeId], references: [id])
  products    Product[]       @relation("ProductToMemory")
}

model MemoryMarque {
  id           String   @id @default(uuid())
  name         String
  memoryboards Memory[]
}

model MemoryNumber {
  id           String   @id @default(uuid())
  number       Int
  memoryboards Memory[]
}

model MemoryType {
  id           String   @id @default(uuid())
  name         String
  memoryboards Memory[]
}

model MemoryFrequency {
  id           String   @id @default(uuid())
  name         String
  memoryboards Memory[]
}

model Powersupply {
  id                  String            @id @default(uuid())
  modularity          Boolean
  certificationId     String
  Power               Int
  powersupplyMarqueId String
  certification       PsCertification   @relation(fields: [certificationId], references: [id])
  Marque              PowersupplyMarque @relation(fields: [powersupplyMarqueId], references: [id])
  products            Product[]         @relation("ProductToPowersupply")
}

model PowersupplyMarque {
  id            String        @id @default(uuid())
  name          String
  powersupplies Powersupply[]
}

model PsCertification {
  id            String        @id @default(uuid())
  name          String
  powersupplies Powersupply[]
}

model Gpu {
  id                String          @id @default(uuid())
  GpuBrandId        String
  gpuArchBrandId    String
  graphiccardNameId String
  TDP               Int             @default(0)
  gpuBrand          GpuBrand        @relation(fields: [GpuBrandId], references: [id])
  gpuArchBrand      GpuArchBrand    @relation(fields: [gpuArchBrandId], references: [id])
  graphiccardName   GraphiccardName @relation(fields: [graphiccardNameId], references: [id])
  products          Product[]       @relation("ProductToGPU")
}

model GpuBrand {
  id           String @id @default(uuid())
  name         String
  motherboards Gpu[]
}

model GpuArchBrand {
  id           String @id @default(uuid())
  name         String
  motherboards Gpu[]
}

model GraphiccardName {
  id           String @id @default(uuid())
  name         String
  motherboards Gpu[]
}

model PCcase {
  id                         String                         @id @default(uuid())
  brandId                    String
  caseformatiD               String
  numberofFansPreinstalledId String
  rGBTypeId                  String
  brand                      PCcaseBrand                    @relation(fields: [brandId], references: [id])
  caseformat                 PCcaseCaseformat               @relation(fields: [caseformatiD], references: [id])
  numberofFansPreinstalled   PCcaseNumberofFansPreinstalled @relation(fields: [numberofFansPreinstalledId], references: [id])
  rGBType                    PCcaseRGBType                  @relation(fields: [rGBTypeId], references: [id])
  product                    Product[]                      @relation("ProductToPCCase")
}

model PCcaseBrand {
  id     String   @id @default(uuid())
  name   String
  pccase PCcase[]
}

model PCcaseCaseformat {
  id     String   @id @default(uuid())
  name   String
  pccase PCcase[]
}

model PCcaseNumberofFansPreinstalled {
  id     String   @id @default(uuid())
  name   String
  pccase PCcase[]
}

model PCcaseRGBType {
  id     String   @id @default(uuid())
  name   String
  pccase PCcase[]
}

model Harddisk {
  id                  String                    @id @default(uuid())
  brandId             String
  typeId              String
  capacityId          String
  ComputerinterfaceId String
  TDP                 Int                       @default(0)
  Computerinterface   HarddiskComputerinterface @relation(fields: [ComputerinterfaceId], references: [id])
  brand               HarddiskBrand             @relation(fields: [brandId], references: [id])
  capacity            HarddiskCapacity          @relation(fields: [capacityId], references: [id])
  type                HarddiskType              @relation(fields: [typeId], references: [id])
  product             Product[]                 @relation("ProductToStorage")
}

model HarddiskBrand {
  id       String     @id @default(uuid())
  name     String
  harddisk Harddisk[]
}

model HarddiskType {
  id       String     @id @default(uuid())
  name     String
  harddisk Harddisk[]
}

model HarddiskCapacity {
  id       String     @id @default(uuid())
  name     String
  harddisk Harddisk[]
}

model HarddiskComputerinterface {
  id       String     @id @default(uuid())
  name     String
  harddisk Harddisk[]
}

model Cooling {
  id            String      @id @default(uuid())
  Rgb           Boolean
  CoolingMarkId String
  CoolingTypeId String
  FansNumberId  String
  CPUSupportId  String
  CPUSupport    CPUSupport  @relation(fields: [CPUSupportId], references: [id])
  CoolingMark   CoolingMark @relation(fields: [CoolingMarkId], references: [id])
  CoolingType   CoolingType @relation(fields: [CoolingTypeId], references: [id])
  FansNumber    FansNumber  @relation(fields: [FansNumberId], references: [id])
  product       Product[]   @relation("ProductToCooling")
}

model CoolingMark {
  id      String    @id @default(uuid())
  name    String
  cooling Cooling[]
}

model CoolingType {
  id      String    @id @default(uuid())
  name    String
  cooling Cooling[]
}

model FansNumber {
  id      String    @id @default(uuid())
  number  Int
  cooling Cooling[]
}

model Slide {
  id                String   @id @default(uuid())
  title             String
  description       String
  imageUrl          String
  url               String
  discount          Int      @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  bgUrl             String   @default("")
  mobilebgURl       String   @default("")
  descriptionColor  String   @default("")
  titleColor        String   @default("")
  DeletedPrice      String   @default("")
  DeletedPriceColor String   @default("")
  Price             String   @default("")
  PriceColor        String   @default("")
}

model SearchQuery {
  id    String @id @default(cuid())
  query String
}

model ComponentOnPc {
  id                    String                @id @default(uuid())
  productId             String
  componentOnPcGroupeId String?
  ComponentOnPcGroupe   ComponentOnPcGroupe?  @relation(fields: [componentOnPcGroupeId], references: [id])
  CPCPUs                CompatibiltyProfile[] @relation("CPUs")
  CPcases               CompatibiltyProfile[] @relation("Cases")
  CPGPUs                CompatibiltyProfile[] @relation("GPUs")
  CPmotherboards        CompatibiltyProfile[] @relation("Motherboards")
  CPpowersupplys        CompatibiltyProfile[] @relation("PowerSupplies")
  coolings              CompatibiltyProfile[] @relation("coolings")
}

model CompatibiltyProfile {
  id           String                @id @default(uuid())
  name         String
  createdAt    DateTime              @default(now())
  CPUs         ComponentOnPc[]       @relation("CPUs")
  cases        ComponentOnPc[]       @relation("Cases")
  disks        ComponentOnPcGroupe[] @relation("Disks")
  GPUs         ComponentOnPc[]       @relation("GPUs")
  motherboards ComponentOnPc[]       @relation("Motherboards")
  powersupplys ComponentOnPc[]       @relation("PowerSupplies")
  RAMs         ComponentOnPcGroupe[] @relation("Rams")
  coolings     ComponentOnPc[]       @relation("coolings")
}

model ComponentOnPcGroupe {
  id         String                @id @default(uuid())
  Components ComponentOnPc[]
  disks      CompatibiltyProfile[] @relation("Disks")
  rams       CompatibiltyProfile[] @relation("Rams")
}

model navitem {
  id                  String                @id @default(uuid())
  label               String
  link                String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  interface           String                @default("Desktop")
  CathegoryCollection CathegoryCollection[]
}

model CathegoryCollection {
  id        String         @id @default(uuid())
  Label     String
  index     Decimal
  navitemId String
  interface String         @default("Desktop")
  catgories Cathegorilab[]
  navitem   navitem        @relation(fields: [navitemId], references: [id], onDelete: Cascade)
}

model Cathegorilab {
  id                    String              @id @default(uuid())
  index                 Decimal
  catId                 String
  Label                 String
  CathegoryCollectionId String
  interface             String              @default("Desktop")
  cathegoryCollection   CathegoryCollection @relation(fields: [CathegoryCollectionId], references: [id], onDelete: Cascade)
}

model Laptop {
  id               String             @id @default(uuid())
  TouchScreen      Boolean
  SystemId         String?
  ProcesseurId     String?
  ProcesseurReId   String?
  GraphiccardId    String?
  GraphiccardRefId String?
  ScreenSizeId     String?
  ScreenTypeId     String?
  memoryId         String?
  networkId        String?
  SoundId          String?
  CameraId         String?
  RefreshRateId    String?
  manufacturerId   String?
  HardiskId        String?
  Camera           LapCamera?         @relation(fields: [CameraId], references: [id])
  Graphiccard      LapGraphiccard?    @relation(fields: [GraphiccardId], references: [id])
  GraphiccardRef   LapGraphiccardRef? @relation(fields: [GraphiccardRefId], references: [id])
  Hardisk          LapHardisk?        @relation(fields: [HardiskId], references: [id])
  Processeur       LapProcesseur?     @relation(fields: [ProcesseurId], references: [id])
  ProcesseurRe     LapProcesseurRe?   @relation(fields: [ProcesseurReId], references: [id])
  RefreshRate      LapRefreshRate?    @relation(fields: [RefreshRateId], references: [id])
  ScreenSize       LapScreenSize?     @relation(fields: [ScreenSizeId], references: [id])
  ScreenType       LapScreenType?     @relation(fields: [ScreenTypeId], references: [id])
  Sound            LapSound?          @relation(fields: [SoundId], references: [id])
  System           LapSystem?         @relation(fields: [SystemId], references: [id])
  Manufacturer     Manufacturer?      @relation(fields: [manufacturerId], references: [id])
  memory           Lapmemory?         @relation(fields: [memoryId], references: [id])
  network          Lapnetwork?        @relation(fields: [networkId], references: [id])
  product          Product[]          @relation("ProductToLaptop")
}

model LapSystem {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapProcesseur {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapProcesseurRe {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapGraphiccard {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapGraphiccardRef {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapScreenSize {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapScreenType {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapHardisk {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model Lapmemory {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model Lapnetwork {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapSound {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapCamera {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model LapRefreshRate {
  id      String   @id @default(uuid())
  name    String
  laptops Laptop[]
}

model keyboard {
  id                     String                @id @default(uuid())
  manufacturerId         String?
  keyboarButtonsNumberId String?
  keyboarFormatId        String?
  keyboarTouchTypeId     String?
  keyboarbrandId         String?
  rgb                    Boolean
  wireless               Boolean
  keyboarButtonsNumber   keyboarButtonsNumber? @relation(fields: [keyboarButtonsNumberId], references: [id])
  keyboarFormat          keyboarFormat?        @relation(fields: [keyboarFormatId], references: [id])
  keyboarTouchType       keyboarTouchType?     @relation(fields: [keyboarTouchTypeId], references: [id])
  keyboarbrand           keyboarbrand?         @relation(fields: [keyboarbrandId], references: [id])
  Manufacturer           Manufacturer?         @relation(fields: [manufacturerId], references: [id])
  product                Product[]             @relation("ProductTokeyboard")
}

model keyboarbrand {
  id        String     @id @default(uuid())
  name      String
  keyboards keyboard[]
}

model keyboarFormat {
  id        String     @id @default(uuid())
  name      String
  keyboards keyboard[]
}

model keyboarButtonsNumber {
  id        String     @id @default(uuid())
  name      String
  keyboards keyboard[]
}

model keyboarTouchType {
  id        String     @id @default(uuid())
  name      String
  keyboards keyboard[]
}

model Headset {
  id                               String                          @id @default(uuid())
  manufacturerId                   String?
  headsetInterfaceAvecOrdinateurId String?
  headsetModelId                   String?
  headsetSonSurroundId             String?
  rgb                              Boolean
  wireless                         Boolean
  HeadsetInterfaceAvecOrdinateur   HeadsetInterfaceAvecOrdinateur? @relation(fields: [headsetInterfaceAvecOrdinateurId], references: [id])
  HeadsetModel                     HeadsetModel?                   @relation(fields: [headsetModelId], references: [id])
  HeadsetSonSurround               HeadsetSonSurround?             @relation(fields: [headsetSonSurroundId], references: [id])
  Manufacturer                     Manufacturer?                   @relation(fields: [manufacturerId], references: [id])
  product                          Product[]                       @relation("ProductToHeadset")
}

model HeadsetModel {
  id      String    @id @default(uuid())
  name    String
  Headset Headset[]
}

model HeadsetInterfaceAvecOrdinateur {
  id      String    @id @default(uuid())
  name    String
  Headset Headset[]
}

model HeadsetSonSurround {
  id      String    @id @default(uuid())
  name    String
  Headset Headset[]
}

model Mic {
  id                           String                      @id @default(uuid())
  manufacturerId               String?
  micInterfaceAvecOrdinateurId String?
  micModelId                   String?
  micSonSurroundId             String?
  rgb                          Boolean
  wireless                     Boolean
  Manufacturer                 Manufacturer?               @relation(fields: [manufacturerId], references: [id])
  MicInterfaceAvecOrdinateur   MicInterfaceAvecOrdinateur? @relation(fields: [micInterfaceAvecOrdinateurId], references: [id])
  MicModel                     MicModel?                   @relation(fields: [micModelId], references: [id])
  MicSonSurround               MicSonSurround?             @relation(fields: [micSonSurroundId], references: [id])
  product                      Product[]                   @relation("ProductToMic")
}

model MicModel {
  id   String @id @default(uuid())
  name String
  Mic  Mic[]
}

model MicInterfaceAvecOrdinateur {
  id   String @id @default(uuid())
  name String
  Mic  Mic[]
}

model MicSonSurround {
  id   String @id @default(uuid())
  name String
  Mic  Mic[]
}

model Mousepad {
  id              String         @id @default(uuid())
  manufacturerId  String?
  mousepadModelId String?
  mousepadSizeId  String?
  rgb             Boolean
  Manufacturer    Manufacturer?  @relation(fields: [manufacturerId], references: [id])
  MousepadModel   MousepadModel? @relation(fields: [mousepadModelId], references: [id])
  MousepadSize    MousepadSize?  @relation(fields: [mousepadSizeId], references: [id])
  product         Product[]      @relation("ProductToMousepad")
}

model MousepadModel {
  id       String     @id @default(uuid())
  name     String
  Mousepad Mousepad[]
}

model MousepadSize {
  id       String     @id @default(uuid())
  name     String
  Mousepad Mousepad[]
}

model Mouse {
  id             String        @id @default(uuid())
  manufacturerId String?
  rgb            Boolean
  wirless        Boolean
  sensorTypeId   String?
  Manufacturer   Manufacturer? @relation(fields: [manufacturerId], references: [id])
  SensorType     SensorType?   @relation(fields: [sensorTypeId], references: [id])
  product        Product[]     @relation("ProductToMouse")
}

model SensorType {
  id    String  @id @default(uuid())
  name  String
  Mouse Mouse[]
}

model pcTemplate {
  id                   String                             @id @default(uuid())
  discountOnPc         Decimal                            @default(0)
  defaultcaseId        String
  defaultgraphicCardId String
  defaultmotherBoardId String
  defaultpowerSupplyId String
  defaultprocessorId   String
  defaulthardDiskArray String[]
  defaultramIdArray    String[]
  defaultcooling       String                             @default("")
  PreBuiltPcmodel      PreBuiltPcmodel[]
  processorId          EntityProfile[]                    @relation("CPUsZ")
  caseId               EntityProfile[]                    @relation("CasesZ")
  hardDiskArray        ComponentOnPcGroupeEntityProfile[] @relation("DisksZ")
  graphicCardId        EntityProfile[]                    @relation("GPUsZ")
  motherBoardId        EntityProfile[]                    @relation("MotherboardsZ")
  powerSupplyId        EntityProfile[]                    @relation("PowerSuppliesZ")
  ramIdArray           ComponentOnPcGroupeEntityProfile[] @relation("RamsZ")
  cooling              EntityProfile[]                    @relation("coolingsZ")
}

model ComponentOnPcGroupeEntityProfile {
  id         String          @id @default(uuid())
  defaultId  String          @default("")
  Components EntityProfile[]
  disks      pcTemplate[]    @relation("DisksZ")
  rams       pcTemplate[]    @relation("RamsZ")
}

model EntityProfile {
  id                               String                            @id @default(uuid())
  productId                        String
  ComponentOnPcGroupeEntityProfile String?
  ComponentOnPcGroupe              ComponentOnPcGroupeEntityProfile? @relation(fields: [ComponentOnPcGroupeEntityProfile], references: [id])
  CPCPUs                           pcTemplate[]                      @relation("CPUsZ")
  CPcases                          pcTemplate[]                      @relation("CasesZ")
  CPGPUs                           pcTemplate[]                      @relation("GPUsZ")
  CPmotherboards                   pcTemplate[]                      @relation("MotherboardsZ")
  CPpowersupplys                   pcTemplate[]                      @relation("PowerSuppliesZ")
  coolings                         pcTemplate[]                      @relation("coolingsZ")
}

model PreBuiltPcmodel {
  id           String     @id @default(uuid())
  productId    String     @unique
  pcTemplateId String
  pcTemplate   pcTemplate @relation(fields: [pcTemplateId], references: [id])
  product      Product    @relation(fields: [productId], references: [id])
}

model Camera {
  id              String        @id @default(uuid())
  manufacturerId  String?
  mousepadModelId String?
  Manufacturer    Manufacturer? @relation(fields: [manufacturerId], references: [id])
  MousepadModel   CameraType?   @relation(fields: [mousepadModelId], references: [id])
  product         Product[]     @relation("ProductToCamera")
}

model CameraType {
  id     String   @id @default(uuid())
  name   String
  Camera Camera[]
}

model Hautparleur {
  id             String        @id @default(uuid())
  manufacturerId String?
  RgbTypeId      String?
  SonsurroundId  String?
  RgbType        RgbType?      @relation(fields: [RgbTypeId], references: [id])
  Sonsurround    Sonsurround?  @relation(fields: [SonsurroundId], references: [id])
  Manufacturer   Manufacturer? @relation(fields: [manufacturerId], references: [id])
  product        Product[]     @relation("ProductToHautparleur")
}

model RgbType {
  id           String         @id @default(uuid())
  name         String
  Chaisegaming Chaisegaming[]
  Hautparleur  Hautparleur[]
  Manette      Manette[]
}

model Sonsurround {
  id          String        @id @default(uuid())
  name        String
  Hautparleur Hautparleur[]
}

model Chaisegaming {
  id             String        @id @default(uuid())
  manufacturerId String?
  RgbTypeId      String?
  RgbType        RgbType?      @relation(fields: [RgbTypeId], references: [id])
  Manufacturer   Manufacturer? @relation(fields: [manufacturerId], references: [id])
  product        Product[]     @relation("ProductToChaisegaming")
}

model Manette {
  id             String        @id @default(uuid())
  manufacturerId String?
  RgbTypeId      String?
  Connectiviteid String?
  Connectivite   Connectivite? @relation(fields: [Connectiviteid], references: [id])
  RgbType        RgbType?      @relation(fields: [RgbTypeId], references: [id])
  Manufacturer   Manufacturer? @relation(fields: [manufacturerId], references: [id])
  product        Product[]     @relation("ProductToManette")
}

model Connectivite {
  id          String    @id @default(uuid())
  name        String
  Hautparleur Manette[]
}

model Pack {
  id             String        @id @default(uuid())
  manufacturerId String?
  Manufacturer   Manufacturer? @relation(fields: [manufacturerId], references: [id])
  product        Product[]     @relation("ProductsToPack")
}

model AccessoryPack {
  id              String     @id @default(uuid())
  DefaultClavier  String     @default("")
  DefaultMouse    String     @default("")
  DefaultMousePad String     @default("")
  DefaultMic      String     @default("")
  DefaultHeadset  String     @default("")
  DefaultCamera   String     @default("")
  DefaultScreen   String     @default("")
  DefaultChair    String     @default("")
  DefaultManette  String     @default("")
  DefaultSpeaker  String     @default("")
  discountOnPack  Decimal    @default(0)
  FullPackOrder   FullPack[] @relation("FullPackOrderPackOrder")
  Camera          Product[]  @relation("PackCamera")
  Chair           Product[]  @relation("PackChair")
  Clavier         Product[]  @relation("PackClavier")
  Headset         Product[]  @relation("PackHeadset")
  Manette         Product[]  @relation("PackManette")
  Mic             Product[]  @relation("PackMic")
  Mouse           Product[]  @relation("PackMouse")
  MousePad        Product[]  @relation("PackMousePad")
  Product         Product[]  @relation("PackProduct")
  Screen          Product[]  @relation("PackScreen")
  Speaker         Product[]  @relation("PackSpeaker")
}

model PackOrder {
  id        String    @id @default(uuid())
  Title     String
  price     Decimal   @default(0)
  reduction Decimal   @default(0)
  packId    String
  packTitle String
  packImage String
  orderId   String?
  Order     Order?    @relation(fields: [orderId], references: [id])
  Camera    Product[] @relation("OrderPackCamera")
  Chair     Product[] @relation("OrderPackChair")
  Clavier   Product[] @relation("OrderPackClavier")
  Headset   Product[] @relation("OrderPackHeadset")
  Manette   Product[] @relation("OrderPackManette")
  Mic       Product[] @relation("OrderPackMic")
  Mouse     Product[] @relation("OrderPackMouse")
  MousePad  Product[] @relation("OrderPackMousePad")
  Screen    Product[] @relation("OrderPackScreen")
  Speaker   Product[] @relation("OrderPackSpeaker")
}

model FullPack {
  id             String          @id @default(uuid())
  Title          String
  price          Decimal         @default(0)
  reduction      Decimal         @default(0)
  packId         String
  packTitle      String
  packImage      String
  discountOnPack Decimal         @default(0)
  DefaultPack    String          @default("")
  DefaultUnity   String          @default("")
  DefaultScreen  String          @default("")
  Pack           AccessoryPack[] @relation("FullPackOrderPackOrder")
  Screen         Product[]       @relation("FullPackOrderScreen")
  Unity          Product[]       @relation("FullPackOrderUnity")
  Product        Product[]       @relation("FullPackProduct")
}

enum NavLab {
  PCS
  COMPONENTS
  PEREPHRALS
  PACKS
}

enum Componenets {
  MOTHERBOARD
  CPU
  GPU
  RAM
  DISK
  CASE
  POWERSUPPLY
}
// --- NEXTAUTH REQUIRED MODELS ---
// Stores OAuth account links (e.g., Google)
model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// Stores active sessions
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// For email verification (useful later even if not used today)
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
